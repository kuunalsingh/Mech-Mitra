{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n}; // selector\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, .0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"Book\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"Remove\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warm(`cant remove product(id: ${action.id}) as its not in basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/mechmitra/mech-mitra/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","index","findIndex","basketItem","id","newBasket","splice","warm"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB,C,CAKP;;AACA,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,EAAtD,CADK;;AAGL,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,MAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAIF,SAAK,QAAL;AACE,YAAMQ,KAAK,GAAGL,KAAK,CAACR,MAAN,CAAac,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBP,MAAM,CAACO,EAD7B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACR,MAAV,CAAhB;;AACA,UAAGa,KAAK,IAAI,CAAZ,EAAe;AACXI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEO;AACHH,QAAAA,OAAO,CAACS,IAAR,CACK,2BAA0BV,MAAM,CAACO,EAAG,yBADzC;AAGH;;AACD,aAAO,EACH,GAAGR,KADA;AAEHR,QAAAA,MAAM,EAAEiB;AAFL,OAAP;;AAIA,SAAK,UAAL;AACA,aAAO,EACH,GAAGT,KADA;AAEHP,QAAAA;AAFG,OAAP;;AAIF;AACE,aAAOO,KAAP;AA5BJ;AA8BD,CAhCC;;AAkCF,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  basket: [],\r\n  user: null\r\n};\r\n\r\n// selector\r\nexport const getBasketTotal = (basket) =>\r\n  basket?.reduce((amount, item) => item.price + amount, .0);\r\n\r\n  const reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"Book\":\r\n      return {\r\n        ...state,\r\n        basket: [...state.basket, action.item],\r\n      };\r\n    case \"Remove\":\r\n      const index = state.basket.findIndex(\r\n        (basketItem) => basketItem.id === action.id\r\n      );\r\n      let newBasket = [...state.basket];\r\n      if(index >= 0) {\r\n          newBasket.splice(index, 1);\r\n      } else {\r\n          console.warm(\r\n              `cant remove product(id: ${action.id}) as its not in basket!`\r\n          )\r\n      }\r\n      return {\r\n          ...state,\r\n          basket: newBasket\r\n      }\r\n      case \"SET_USER\":\r\n      return {\r\n          ...state,\r\n          user\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}