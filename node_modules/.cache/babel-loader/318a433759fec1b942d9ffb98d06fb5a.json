{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/mechmitra/mech-mitra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.upload = upload;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _click = require(\"./click\");\n\nvar _blur = require(\"./blur\");\n\nvar _focus = require(\"./focus\");\n\nfunction upload(element, fileOrFiles, init) {\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$applyAccept = _ref.applyAccept,\n      applyAccept = _ref$applyAccept === void 0 ? false : _ref$applyAccept;\n\n  if (element.disabled) return;\n  (0, _click.click)(element, init);\n  var input = element.tagName === 'LABEL' ? element.control : element;\n  var files = (Array.isArray(fileOrFiles) ? fileOrFiles : [fileOrFiles]).filter(function (file) {\n    return !applyAccept || isAcceptableFile(file, element.accept);\n  }).slice(0, input.multiple ? undefined : 1); // blur fires when the file selector pops up\n\n  (0, _blur.blur)(element, init); // focus fires when they make their selection\n\n  (0, _focus.focus)(element, init); // do not fire an input event if the file selection does not change\n\n  if (files.length === input.files.length && files.every(function (f, i) {\n    return f === input.files.item(i);\n  })) {\n    return;\n  } // the event fired in the browser isn't actually an \"input\" or \"change\" event\n  // but a new Event with a type set to \"input\" and \"change\"\n  // Kinda odd...\n\n\n  var inputFiles = _objectSpread({\n    length: files.length,\n    item: function item(index) {\n      return files[index];\n    }\n  }, files);\n\n  (0, _dom.fireEvent)(input, (0, _dom.createEvent)('input', input, _objectSpread({\n    target: {\n      files: inputFiles\n    },\n    bubbles: true,\n    cancelable: false,\n    composed: true\n  }, init)));\n\n  _dom.fireEvent.change(input, _objectSpread({\n    target: {\n      files: inputFiles\n    }\n  }, init));\n}\n\nfunction isAcceptableFile(file, accept) {\n  if (!accept) {\n    return true;\n  }\n\n  var wildcards = ['audio/*', 'image/*', 'video/*'];\n  return accept.split(',').some(function (acceptToken) {\n    if (acceptToken[0] === '.') {\n      // tokens starting with a dot represent a file extension\n      return file.name.endsWith(acceptToken);\n    } else if (wildcards.includes(acceptToken)) {\n      return file.type.startsWith(acceptToken.substr(0, acceptToken.length - 1));\n    }\n\n    return file.type === acceptToken;\n  });\n}","map":{"version":3,"sources":["C:/mechmitra/mech-mitra/node_modules/@testing-library/user-event/dist/upload.js"],"names":["Object","defineProperty","exports","value","upload","_dom","require","_click","_blur","_focus","element","fileOrFiles","init","applyAccept","disabled","click","input","tagName","control","files","Array","isArray","filter","file","isAcceptableFile","accept","slice","multiple","undefined","blur","focus","length","every","f","i","item","inputFiles","index","fireEvent","createEvent","target","bubbles","cancelable","composed","change","wildcards","split","some","acceptToken","name","endsWith","includes","type","startsWith","substr"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.upload = upload;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _click = require(\"./click\");\n\nvar _blur = require(\"./blur\");\n\nvar _focus = require(\"./focus\");\n\nfunction upload(element, fileOrFiles, init, {\n  applyAccept = false\n} = {}) {\n  if (element.disabled) return;\n  (0, _click.click)(element, init);\n  const input = element.tagName === 'LABEL' ? element.control : element;\n  const files = (Array.isArray(fileOrFiles) ? fileOrFiles : [fileOrFiles]).filter(file => !applyAccept || isAcceptableFile(file, element.accept)).slice(0, input.multiple ? undefined : 1); // blur fires when the file selector pops up\n\n  (0, _blur.blur)(element, init); // focus fires when they make their selection\n\n  (0, _focus.focus)(element, init); // do not fire an input event if the file selection does not change\n\n  if (files.length === input.files.length && files.every((f, i) => f === input.files.item(i))) {\n    return;\n  } // the event fired in the browser isn't actually an \"input\" or \"change\" event\n  // but a new Event with a type set to \"input\" and \"change\"\n  // Kinda odd...\n\n\n  const inputFiles = {\n    length: files.length,\n    item: index => files[index],\n    ...files\n  };\n  (0, _dom.fireEvent)(input, (0, _dom.createEvent)('input', input, {\n    target: {\n      files: inputFiles\n    },\n    bubbles: true,\n    cancelable: false,\n    composed: true,\n    ...init\n  }));\n\n  _dom.fireEvent.change(input, {\n    target: {\n      files: inputFiles\n    },\n    ...init\n  });\n}\n\nfunction isAcceptableFile(file, accept) {\n  if (!accept) {\n    return true;\n  }\n\n  const wildcards = ['audio/*', 'image/*', 'video/*'];\n  return accept.split(',').some(acceptToken => {\n    if (acceptToken[0] === '.') {\n      // tokens starting with a dot represent a file extension\n      return file.name.endsWith(acceptToken);\n    } else if (wildcards.includes(acceptToken)) {\n      return file.type.startsWith(acceptToken.substr(0, acceptToken.length - 1));\n    }\n\n    return file.type === acceptToken;\n  });\n}"]},"metadata":{},"sourceType":"script"}