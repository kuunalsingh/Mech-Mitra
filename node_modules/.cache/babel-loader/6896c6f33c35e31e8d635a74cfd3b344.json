{"ast":null,"code":"export const initialState = {\n  basket: []\n}; // selector\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"Book\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"Remove\":\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {}\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/mechmitra/mech-mitra/src/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","price","reducer","state","action","console","log","type","index","findIndex","basketItem","id","newBasket"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AADkB,CAArB,C,CAIP;;AACA,OAAO,MAAMC,cAAc,GAAID,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEE,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAEP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,MAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELP,QAAAA,MAAM,EAAE,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAkBQ,MAAM,CAACJ,IAAzB;AAFH,OAAP;;AAIF,SAAK,QAAL;AACE,YAAMQ,KAAK,GAAGL,KAAK,CAACP,MAAN,CAAaa,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBP,MAAM,CAACO,EAD7B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACP,MAAV,CAAhB;;AACA,UAAGY,KAAK,IAAI,CAAZ,EAAe,CAEd;;AACH;AACE,aAAOL,KAAP;AAfJ;AAiBD,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n  basket: [],\r\n};\r\n\r\n// selector\r\nexport const getBasketTotal = (basket) =>\r\n  basket?.reduce((amount, item) => item.price + amount, 0);\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case \"Book\":\r\n      return {\r\n        ...state,\r\n        basket: [...state.basket, action.item],\r\n      };\r\n    case \"Remove\":\r\n      const index = state.basket.findIndex(\r\n        (basketItem) => basketItem.id === action.id\r\n      );\r\n      let newBasket = [...state.basket];\r\n      if(index >= 0) {\r\n          \r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}